<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/VirtuosoAssetConfig.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/VirtuosoAssetConfig</TokenIdentifier>
			<Abstract type="html">Use this class to configure settings used when creating an Asset.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
            
			
			<NodeRef refid="12"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAssetConfig/setPlaylists:</TokenIdentifier>
			<Abstract type="html">Optional Playlists that this asset should be added to.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;VirtuosoPlaylist*&gt; *playlists</Declaration>
			
			
			<Anchor>//api/name/playlists</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAssetConfig/playlists</TokenIdentifier>
			<Abstract type="html">Optional Playlists that this asset should be added to.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;VirtuosoPlaylist*&gt; *playlists</Declaration>
			
			
			<Anchor>//api/name/playlists</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VirtuosoAssetConfig/playlists</TokenIdentifier>
			<Abstract type="html">Optional Playlists that this asset should be added to.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;VirtuosoPlaylist*&gt; *playlists</Declaration>
			
			
			<Anchor>//api/name/playlists</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAssetConfig/setAssetURL:</TokenIdentifier>
			<Abstract type="html">Where this asset exists on the Internet</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) NSString *assetURL</Declaration>
			
			
			<Anchor>//api/name/assetURL</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAssetConfig/assetURL</TokenIdentifier>
			<Abstract type="html">Where this asset exists on the Internet</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) NSString *assetURL</Declaration>
			
			
			<Anchor>//api/name/assetURL</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VirtuosoAssetConfig/assetURL</TokenIdentifier>
			<Abstract type="html">Where this asset exists on the Internet</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) NSString *assetURL</Declaration>
			
			
			<Anchor>//api/name/assetURL</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAssetConfig/setAssetID:</TokenIdentifier>
			<Abstract type="html">A unique identifier that you provide when instantiating this asset</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) NSString *assetID</Declaration>
			
			
			<Anchor>//api/name/assetID</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAssetConfig/assetID</TokenIdentifier>
			<Abstract type="html">A unique identifier that you provide when instantiating this asset</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) NSString *assetID</Declaration>
			
			
			<Anchor>//api/name/assetID</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VirtuosoAssetConfig/assetID</TokenIdentifier>
			<Abstract type="html">A unique identifier that you provide when instantiating this asset</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) NSString *assetID</Declaration>
			
			
			<Anchor>//api/name/assetID</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAssetConfig/setAssetDescription:</TokenIdentifier>
			<Abstract type="html">A human-readable description for this asset</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) NSString *assetDescription</Declaration>
			
			
			<Anchor>//api/name/assetDescription</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAssetConfig/assetDescription</TokenIdentifier>
			<Abstract type="html">A human-readable description for this asset</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) NSString *assetDescription</Declaration>
			
			
			<Anchor>//api/name/assetDescription</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VirtuosoAssetConfig/assetDescription</TokenIdentifier>
			<Abstract type="html">A human-readable description for this asset</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) NSString *assetDescription</Declaration>
			
			
			<Anchor>//api/name/assetDescription</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAssetConfig/setAssetType:</TokenIdentifier>
			<Abstract type="html">The asset type</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, readonly) kVDE_AssetType assetType</Declaration>
			
			
			<Anchor>//api/name/assetType</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAssetConfig/assetType</TokenIdentifier>
			<Abstract type="html">The asset type</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, readonly) kVDE_AssetType assetType</Declaration>
			
			
			<Anchor>//api/name/assetType</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VirtuosoAssetConfig/assetType</TokenIdentifier>
			<Abstract type="html">The asset type</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, readonly) kVDE_AssetType assetType</Declaration>
			
			
			<Anchor>//api/name/assetType</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAssetConfig/setIncludeEncryption:</TokenIdentifier>
			<Abstract type="html">If YES, then the asset will download any encryption keys in manifest.
Normally, you would pass YES, but this allows for custom behaviors.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) Boolean includeEncryption</Declaration>
			
			
			<Anchor>//api/name/includeEncryption</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAssetConfig/includeEncryption</TokenIdentifier>
			<Abstract type="html">If YES, then the asset will download any encryption keys in manifest.
Normally, you would pass YES, but this allows for custom behaviors.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) Boolean includeEncryption</Declaration>
			
			
			<Anchor>//api/name/includeEncryption</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VirtuosoAssetConfig/includeEncryption</TokenIdentifier>
			<Abstract type="html">If YES, then the asset will download any encryption keys in manifest.
Normally, you would pass YES, but this allows for custom behaviors.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) Boolean includeEncryption</Declaration>
			
			
			<Anchor>//api/name/includeEncryption</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAssetConfig/setMaximumBitrate:</TokenIdentifier>
			<Abstract type="html">For manifests containing multiple profiles, Virtuoso will select the highest bitrate
profile whose bitrate doesn&apos;t exceed this value. A value of 1 means &quot;use the lowest
bitrate.&quot; If there&apos;s no profile of lower bitrate than maximumBitrate, Virtuoso will
select the lowest bitrate profile.  A value of INT_MAX means &quot;use the highest bitrate.&quot;
Defaults to maximum rate INT_MAX.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) long long maximumBitrate</Declaration>
			
			
			<Anchor>//api/name/maximumBitrate</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAssetConfig/maximumBitrate</TokenIdentifier>
			<Abstract type="html">For manifests containing multiple profiles, Virtuoso will select the highest bitrate
profile whose bitrate doesn&apos;t exceed this value. A value of 1 means &quot;use the lowest
bitrate.&quot; If there&apos;s no profile of lower bitrate than maximumBitrate, Virtuoso will
select the lowest bitrate profile.  A value of INT_MAX means &quot;use the highest bitrate.&quot;
Defaults to maximum rate INT_MAX.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) long long maximumBitrate</Declaration>
			
			
			<Anchor>//api/name/maximumBitrate</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VirtuosoAssetConfig/maximumBitrate</TokenIdentifier>
			<Abstract type="html">For manifests containing multiple profiles, Virtuoso will select the highest bitrate
profile whose bitrate doesn&apos;t exceed this value. A value of 1 means &quot;use the lowest
bitrate.&quot; If there&apos;s no profile of lower bitrate than maximumBitrate, Virtuoso will
select the lowest bitrate profile.  A value of INT_MAX means &quot;use the highest bitrate.&quot;
Defaults to maximum rate INT_MAX.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) long long maximumBitrate</Declaration>
			
			
			<Anchor>//api/name/maximumBitrate</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAssetConfig/setMaximumAudioBitrate:</TokenIdentifier>
			<Abstract type="html">Same as maximumBitrate, but for the audio portion of the stream.  If the audio for
this asset is contained within the video profile, this value is ignored.
Defaults to maximum rate INT_MAX.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) long long maximumAudioBitrate</Declaration>
			
			
			<Anchor>//api/name/maximumAudioBitrate</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAssetConfig/maximumAudioBitrate</TokenIdentifier>
			<Abstract type="html">Same as maximumBitrate, but for the audio portion of the stream.  If the audio for
this asset is contained within the video profile, this value is ignored.
Defaults to maximum rate INT_MAX.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) long long maximumAudioBitrate</Declaration>
			
			
			<Anchor>//api/name/maximumAudioBitrate</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VirtuosoAssetConfig/maximumAudioBitrate</TokenIdentifier>
			<Abstract type="html">Same as maximumBitrate, but for the audio portion of the stream.  If the audio for
this asset is contained within the video profile, this value is ignored.
Defaults to maximum rate INT_MAX.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) long long maximumAudioBitrate</Declaration>
			
			
			<Anchor>//api/name/maximumAudioBitrate</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAssetConfig/setPublishDate:</TokenIdentifier>
			<Abstract type="html">When this asset should become available</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/VirtuosoAssetConfig/expiryDate</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (nonatomic, copy) NSDate *publishDate</Declaration>
			
			
			<Anchor>//api/name/publishDate</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAssetConfig/publishDate</TokenIdentifier>
			<Abstract type="html">When this asset should become available</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/VirtuosoAssetConfig/expiryDate</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (nonatomic, copy) NSDate *publishDate</Declaration>
			
			
			<Anchor>//api/name/publishDate</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VirtuosoAssetConfig/publishDate</TokenIdentifier>
			<Abstract type="html">When this asset should become available</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/VirtuosoAssetConfig/expiryDate</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (nonatomic, copy) NSDate *publishDate</Declaration>
			
			
			<Anchor>//api/name/publishDate</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAssetConfig/setExpiryDate:</TokenIdentifier>
			<Abstract type="html">As soon as possible after &apos;expiryDate&apos; has passed, Virtuoso automatically deletes the asset.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSDate *expiryDate</Declaration>
			
			
			<Anchor>//api/name/expiryDate</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAssetConfig/expiryDate</TokenIdentifier>
			<Abstract type="html">As soon as possible after &apos;expiryDate&apos; has passed, Virtuoso automatically deletes the asset.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSDate *expiryDate</Declaration>
			
			
			<Anchor>//api/name/expiryDate</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VirtuosoAssetConfig/expiryDate</TokenIdentifier>
			<Abstract type="html">As soon as possible after &apos;expiryDate&apos; has passed, Virtuoso automatically deletes the asset.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSDate *expiryDate</Declaration>
			
			
			<Anchor>//api/name/expiryDate</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAssetConfig/setExpiryAfterDownload:</TokenIdentifier>
			<Abstract type="html">After the asset has completed download, as soon as possible after &apos;expiryAfterDownload&apos;
time has elapsed, Virtuoso automatically deletes the asset.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) NSTimeInterval expiryAfterDownload</Declaration>
			
			
			<Anchor>//api/name/expiryAfterDownload</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAssetConfig/expiryAfterDownload</TokenIdentifier>
			<Abstract type="html">After the asset has completed download, as soon as possible after &apos;expiryAfterDownload&apos;
time has elapsed, Virtuoso automatically deletes the asset.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) NSTimeInterval expiryAfterDownload</Declaration>
			
			
			<Anchor>//api/name/expiryAfterDownload</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VirtuosoAssetConfig/expiryAfterDownload</TokenIdentifier>
			<Abstract type="html">After the asset has completed download, as soon as possible after &apos;expiryAfterDownload&apos;
time has elapsed, Virtuoso automatically deletes the asset.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) NSTimeInterval expiryAfterDownload</Declaration>
			
			
			<Anchor>//api/name/expiryAfterDownload</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAssetConfig/setExpiryAfterPlay:</TokenIdentifier>
			<Abstract type="html">After the asset is first played, as soon as possible after &apos;expiryAfterPlay&apos; time has elapsed,
Virtuoso automatically deletes the asset.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/VirtuosoAsset</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (nonatomic, assign) NSTimeInterval expiryAfterPlay</Declaration>
			
			
			<Anchor>//api/name/expiryAfterPlay</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAssetConfig/expiryAfterPlay</TokenIdentifier>
			<Abstract type="html">After the asset is first played, as soon as possible after &apos;expiryAfterPlay&apos; time has elapsed,
Virtuoso automatically deletes the asset.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/VirtuosoAsset</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (nonatomic, assign) NSTimeInterval expiryAfterPlay</Declaration>
			
			
			<Anchor>//api/name/expiryAfterPlay</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VirtuosoAssetConfig/expiryAfterPlay</TokenIdentifier>
			<Abstract type="html">After the asset is first played, as soon as possible after &apos;expiryAfterPlay&apos; time has elapsed,
Virtuoso automatically deletes the asset.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/VirtuosoAsset</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (nonatomic, assign) NSTimeInterval expiryAfterPlay</Declaration>
			
			
			<Anchor>//api/name/expiryAfterPlay</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAssetConfig/setAssetDownloadLimit:</TokenIdentifier>
			<Abstract type="html">The asset-specific lifetime download limit.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) NSInteger assetDownloadLimit</Declaration>
			
			
			<Anchor>//api/name/assetDownloadLimit</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAssetConfig/assetDownloadLimit</TokenIdentifier>
			<Abstract type="html">The asset-specific lifetime download limit.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) NSInteger assetDownloadLimit</Declaration>
			
			
			<Anchor>//api/name/assetDownloadLimit</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VirtuosoAssetConfig/assetDownloadLimit</TokenIdentifier>
			<Abstract type="html">The asset-specific lifetime download limit.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) NSInteger assetDownloadLimit</Declaration>
			
			
			<Anchor>//api/name/assetDownloadLimit</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAssetConfig/setFastPlayEnabled:</TokenIdentifier>
			<Abstract type="html">Prepare download for fastplay playback.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) Boolean fastPlayEnabled</Declaration>
			
			
			<Anchor>//api/name/fastPlayEnabled</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAssetConfig/fastPlayEnabled</TokenIdentifier>
			<Abstract type="html">Prepare download for fastplay playback.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) Boolean fastPlayEnabled</Declaration>
			
			
			<Anchor>//api/name/fastPlayEnabled</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VirtuosoAssetConfig/fastPlayEnabled</TokenIdentifier>
			<Abstract type="html">Prepare download for fastplay playback.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) Boolean fastPlayEnabled</Declaration>
			
			
			<Anchor>//api/name/fastPlayEnabled</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAssetConfig/setOfflinePlayEnabled:</TokenIdentifier>
			<Abstract type="html">Prepare download for Offline playback.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) Boolean offlinePlayEnabled</Declaration>
			
			
			<Anchor>//api/name/offlinePlayEnabled</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAssetConfig/offlinePlayEnabled</TokenIdentifier>
			<Abstract type="html">Prepare download for Offline playback.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) Boolean offlinePlayEnabled</Declaration>
			
			
			<Anchor>//api/name/offlinePlayEnabled</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VirtuosoAssetConfig/offlinePlayEnabled</TokenIdentifier>
			<Abstract type="html">Prepare download for Offline playback.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) Boolean offlinePlayEnabled</Declaration>
			
			
			<Anchor>//api/name/offlinePlayEnabled</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAssetConfig/setAutoAddToQueue:</TokenIdentifier>
			<Abstract type="html">If true the asset is automatically added to the download queue. Default is true.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) Boolean autoAddToQueue</Declaration>
			
			
			<Anchor>//api/name/autoAddToQueue</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAssetConfig/autoAddToQueue</TokenIdentifier>
			<Abstract type="html">If true the asset is automatically added to the download queue. Default is true.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) Boolean autoAddToQueue</Declaration>
			
			
			<Anchor>//api/name/autoAddToQueue</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VirtuosoAssetConfig/autoAddToQueue</TokenIdentifier>
			<Abstract type="html">If true the asset is automatically added to the download queue. Default is true.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) Boolean autoAddToQueue</Declaration>
			
			
			<Anchor>//api/name/autoAddToQueue</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAssetConfig/setAncillaries:</TokenIdentifier>
			<Abstract type="html">Optional array of ancillary files.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;VirtuosoAncillaryFile*&gt; *ancillaries</Declaration>
			
			
			<Anchor>//api/name/ancillaries</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAssetConfig/ancillaries</TokenIdentifier>
			<Abstract type="html">Optional array of ancillary files.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;VirtuosoAncillaryFile*&gt; *ancillaries</Declaration>
			
			
			<Anchor>//api/name/ancillaries</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VirtuosoAssetConfig/ancillaries</TokenIdentifier>
			<Abstract type="html">Optional array of ancillary files.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;VirtuosoAncillaryFile*&gt; *ancillaries</Declaration>
			
			
			<Anchor>//api/name/ancillaries</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAssetConfig/setAdsProvider:</TokenIdentifier>
			<Abstract type="html">AdsProvider assocated with the Asset if Ads are enabled.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) VirtuosoAdsProvider *adsProvider</Declaration>
			
			
			<Anchor>//api/name/adsProvider</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAssetConfig/adsProvider</TokenIdentifier>
			<Abstract type="html">AdsProvider assocated with the Asset if Ads are enabled.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) VirtuosoAdsProvider *adsProvider</Declaration>
			
			
			<Anchor>//api/name/adsProvider</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VirtuosoAssetConfig/adsProvider</TokenIdentifier>
			<Abstract type="html">AdsProvider assocated with the Asset if Ads are enabled.</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) VirtuosoAdsProvider *adsProvider</Declaration>
			
			
			<Anchor>//api/name/adsProvider</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAssetConfig/setUserInfo:</TokenIdentifier>
			<Abstract type="html">The generic userInfo metadata for this asset</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSDictionary *userInfo</Declaration>
			
			
			<Anchor>//api/name/userInfo</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAssetConfig/userInfo</TokenIdentifier>
			<Abstract type="html">The generic userInfo metadata for this asset</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSDictionary *userInfo</Declaration>
			
			
			<Anchor>//api/name/userInfo</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VirtuosoAssetConfig/userInfo</TokenIdentifier>
			<Abstract type="html">The generic userInfo metadata for this asset</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSDictionary *userInfo</Declaration>
			
			
			<Anchor>//api/name/userInfo</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAssetConfig/initWithURL:assetID:description:type:</TokenIdentifier>
			<Abstract type="html">Creates instance</Abstract>
			<DeclaredIn>VirtuosoAssetConfig.h</DeclaredIn>
			
			<Declaration>- (instancetype _Nullable)initWithURL:(NSString *_Nonnull)url assetID:(NSString *_Nonnull)assetID description:(NSString *_Nonnull)description type:(kVDE_AssetType)type</Declaration>
			<Parameters>
				<Parameter>
					<Name>url</Name>
					<Abstract type="html">Where the manifest lives on the Internet.</Abstract>
				</Parameter><Parameter>
					<Name>assetID</Name>
					<Abstract type="html">A globally unique identifier for the asset. Used in all log events.
IMPORTANT: This value must be globally unique across all assets within the Catalog.
Dupicate AssetID&apos;s are not allowed.</Abstract>
				</Parameter><Parameter>
					<Name>description</Name>
					<Abstract type="html">A description of the asset.  Virtuoso only uses this in log output.</Abstract>
				</Parameter><Parameter>
					<Name>type</Name>
					<Abstract type="html">Type of asset to create. See kVDE_AssetType</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A instance of this class, nil if an error was encountered.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithURL:assetID:description:type:</Anchor>
            <NodeRef refid="12"/>
		</Token>
		
        
        
	</File>
</Tokens>
<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Categories/VirtuosoAsset+DASH.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cat/VirtuosoAsset(DASH)</TokenIdentifier>
			<Abstract type="html">Provides types and methods used to handle MPEG Dynamic Adaptive Streaming over HTTP (DASH) video</Abstract>
			<DeclaredIn>VirtuosoAsset+DASH.h</DeclaredIn>
            
			
			<NodeRef refid="21"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAsset/assetWithAssetID:description:mpdUrl:protectionType:maximumVideoBitrate:maximumAudioBitrate:publishDate:expiryDate:assetDownloadLimit:enableFastPlay:userInfo:onReadyForDownload:onParseComplete:</TokenIdentifier>
			<Abstract type="html">Creates a new in-memory DASH VirtuosoAsset.</Abstract>
			<DeclaredIn>VirtuosoAsset+DASH.h</DeclaredIn>
			
			<Declaration>+ (nullable VirtuosoAsset *)assetWithAssetID:(nonnull NSString *)assetID description:(nonnull NSString *)description mpdUrl:(nonnull NSString *)mpdUrl protectionType:(kVDE_AssetProtectionType)protectionType maximumVideoBitrate:(long long)maximumVideoBitrate maximumAudioBitrate:(long long)maximumAudioBitrate publishDate:(nullable NSDate *)publishDate expiryDate:(nullable NSDate *)expiryDate assetDownloadLimit:(int)assetDownloadLimit enableFastPlay:(Boolean)enableFastPlay userInfo:(nullable NSDictionary *)userInfo onReadyForDownload:(nullable AssetReadyForDownloadBlock)readyBlock onParseComplete:(nullable AssetParsingCompletedBlock)completeBlock</Declaration>
			<Parameters>
				<Parameter>
					<Name>assetID</Name>
					<Abstract type="html">A globally unique identifier for the asset. Used in all log events. IMPORTANT: This value must be globally unique across all assets within the Catalog. Dupicate AssetID&apos;s are not allowed.</Abstract>
				</Parameter><Parameter>
					<Name>description</Name>
					<Abstract type="html">A description of the asset.  Virtuoso only uses this in log output.</Abstract>
				</Parameter><Parameter>
					<Name>mpdUrl</Name>
					<Abstract type="html">Where the media presentation description (mpd) file lives on the Internet.</Abstract>
				</Parameter><Parameter>
					<Name>protectionType</Name>
					<Abstract type="html">You should pass the default value of kVDE_AssetProtectionTypePassthrough unless
instructed differently by Penthera support.</Abstract>
				</Parameter><Parameter>
					<Name>maximumVideoBitrate</Name>
					<Abstract type="html">For mpd files containing multiple profiles, Virtuoso will select the highest bitrate
profile whose bitrate doesn&apos;t exceed this value. A value of 1 means &quot;use the lowest
bitrate.&quot; If there&apos;s no profile of lower bitrate than maximumBitrate, Virtuoso will
select the lowest bitrate profile. A value of INT_MAX means &quot;use the highest bitrate.&quot;</Abstract>
				</Parameter><Parameter>
					<Name>maximumAudioBitrate</Name>
					<Abstract type="html">Same as maximumVideoBitrate, but for the audio portion of the stream.  If the audio for
this asset is contained within the video profile, this value is ignored.</Abstract>
				</Parameter><Parameter>
					<Name>publishDate</Name>
					<Abstract type="html">Virtuoso will not provide API access to the asset until this date. Nil means &quot;now.&quot;</Abstract>
				</Parameter><Parameter>
					<Name>expiryDate</Name>
					<Abstract type="html">Virtuoso will not provide API access to the asset after this date. Nil means no expiry.</Abstract>
				</Parameter><Parameter>
					<Name>assetDownloadLimit</Name>
					<Abstract type="html">Virtuoso applies this value instead of the backplane-defined global asset download limit
A value &lt; 0 means to use the backplane defined value.  A value of 0 means unlimited.  A
value &gt; 0 will be applied to download permissions checks for this asset.</Abstract>
				</Parameter><Parameter>
					<Name>enableFastPlay</Name>
					<Abstract type="html">If enabled, Virtuoso will automatically download the initial portion of the asset as soon
as the asset is created.  Whenever an asset is streamed, the cached beginning of the asset
will be returned to the player immediatley, eliminating startup buffer time for streamed playback.</Abstract>
				</Parameter><Parameter>
					<Name>userInfo</Name>
					<Abstract type="html">A convenience field allowing you to associate arbitrary data with an asset.
Virtuoso will serialize this data and store it, but not explicitly use this data.
The provided userInfo must be property-list compatible. May be nil.</Abstract>
				</Parameter><Parameter>
					<Name>readyBlock</Name>
					<Abstract type="html">Called when the asset is ready to be added to the download queue</Abstract>
				</Parameter><Parameter>
					<Name>completeBlock</Name>
					<Abstract type="html">Called when asset parsing completes. May be nil.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A new (empty) VirtuosoAsset object, or nil if an error occured.</Abstract></ReturnValue>
			<Anchor>//api/name/assetWithAssetID:description:mpdUrl:protectionType:maximumVideoBitrate:maximumAudioBitrate:publishDate:expiryDate:assetDownloadLimit:enableFastPlay:userInfo:onReadyForDownload:onParseComplete:</Anchor>
            <NodeRef refid="21"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAsset/assetWithAssetID:description:mpdUrl:protectionType:maximumVideoBitrate:maximumAudioBitrate:publishDate:expiryDate:expiryAfterDownload:expiryAfterPlay:assetDownloadLimit:enableFastPlay:userInfo:onReadyForDownload:onParseComplete:</TokenIdentifier>
			<Abstract type="html">Creates a new in-memory DASH VirtuosoAsset object.</Abstract>
			<DeclaredIn>VirtuosoAsset+DASH.h</DeclaredIn>
			
			<Declaration>+ (nullable VirtuosoAsset *)assetWithAssetID:(nonnull NSString *)assetID description:(nonnull NSString *)description mpdUrl:(nonnull NSString *)mpdUrl protectionType:(kVDE_AssetProtectionType)protectionType maximumVideoBitrate:(long long)maximumVideoBitrate maximumAudioBitrate:(long long)maximumAudioBitrate publishDate:(nullable NSDate *)publishDate expiryDate:(nullable NSDate *)expiryDate expiryAfterDownload:(NSTimeInterval)expiryAfterDownload expiryAfterPlay:(NSTimeInterval)expiryAfterPlay assetDownloadLimit:(int)assetDownloadLimit enableFastPlay:(Boolean)enableFastPlay userInfo:(nullable NSDictionary *)userInfo onReadyForDownload:(nullable AssetReadyForDownloadBlock)readyBlock onParseComplete:(nullable AssetParsingCompletedBlock)completeBlock</Declaration>
			<Parameters>
				<Parameter>
					<Name>assetID</Name>
					<Abstract type="html">A globally unique identifier for the asset. Used in all log events. IMPORTANT: This value must be globally unique across all assets within the Catalog. Dupicate AssetID&apos;s are not allowed.</Abstract>
				</Parameter><Parameter>
					<Name>description</Name>
					<Abstract type="html">A description of the asset.  Virtuoso only uses this in log output.</Abstract>
				</Parameter><Parameter>
					<Name>mpdUrl</Name>
					<Abstract type="html">Where the media presentation description (mpd) file lives on the Internet.</Abstract>
				</Parameter><Parameter>
					<Name>protectionType</Name>
					<Abstract type="html">You should pass the default value of kVDE_AssetProtectionTypePassthrough unless
instructed differently by Penthera support.</Abstract>
				</Parameter><Parameter>
					<Name>maximumVideoBitrate</Name>
					<Abstract type="html">For mpd files containing multiple profiles, Virtuoso will select the highest bitrate
profile whose bitrate doesn&apos;t exceed this value. A value of 1 means &quot;use the lowest
bitrate.&quot; If there&apos;s no profile of lower bitrate than maximumBitrate, Virtuoso will
select the lowest bitrate profile. A value of INT_MAX means &quot;use the highest bitrate.&quot;</Abstract>
				</Parameter><Parameter>
					<Name>maximumAudioBitrate</Name>
					<Abstract type="html">Same as maximumVideoBitrate, but for the audio portion of the stream.  If the audio for
this asset is contained within the video profile, this value is ignored.</Abstract>
				</Parameter><Parameter>
					<Name>publishDate</Name>
					<Abstract type="html">Virtuoso will not provide API access to the asset until this date. Nil means &quot;now.&quot;</Abstract>
				</Parameter><Parameter>
					<Name>expiryDate</Name>
					<Abstract type="html">Virtuoso will not provide API access to the asset after this date. Nil means no expiry.</Abstract>
				</Parameter><Parameter>
					<Name>expiryAfterDownload</Name>
					<Abstract type="html">Amount of time after Virtuoso completes download of the asset that
Virtuoso will delete the asset. In seconds. &lt;=0 means no expiry.</Abstract>
				</Parameter><Parameter>
					<Name>expiryAfterPlay</Name>
					<Abstract type="html">Amount of time after the asset is first played that
Virtuoso will delete the asset. In seconds. &lt;=0 means no expiry.</Abstract>
				</Parameter><Parameter>
					<Name>assetDownloadLimit</Name>
					<Abstract type="html">Virtuoso applies this value instead of the backplane-defined global asset download limit
A value &lt; 0 means to use the backplane defined value.  A value of 0 means unlimited.  A
value &gt; 0 will be applied to download permissions checks for this asset.</Abstract>
				</Parameter><Parameter>
					<Name>enableFastPlay</Name>
					<Abstract type="html">If enabled, Virtuoso will automatically download the initial portion of the asset as soon
as the asset is created.  Whenever an asset is streamed, the cached beginning of the asset
will be returned to the player immediatley, eliminating startup buffer time for streamed playback.</Abstract>
				</Parameter><Parameter>
					<Name>userInfo</Name>
					<Abstract type="html">A convenience field allowing you to associate arbitrary data with an asset.
Virtuoso will serialize this data and store it, but not explicitly use this data.
The provided userInfo must be property-list compatible. May be nil.</Abstract>
				</Parameter><Parameter>
					<Name>readyBlock</Name>
					<Abstract type="html">Called when the asset is ready to be added to the download queue</Abstract>
				</Parameter><Parameter>
					<Name>completeBlock</Name>
					<Abstract type="html">Called when asset parsing completes. May be nil.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A new (empty) VirtuosoAsset object, or nil if an error occured.</Abstract></ReturnValue>
			<Anchor>//api/name/assetWithAssetID:description:mpdUrl:protectionType:maximumVideoBitrate:maximumAudioBitrate:publishDate:expiryDate:expiryAfterDownload:expiryAfterPlay:assetDownloadLimit:enableFastPlay:userInfo:onReadyForDownload:onParseComplete:</Anchor>
            <NodeRef refid="21"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAsset/assetWithAssetID:description:mpdUrl:protectionType:maximumVideoBitrate:maximumAudioBitrate:publishDate:expiryDate:expiryAfterDownload:expiryAfterPlay:assetDownloadLimit:enableFastPlay:ancillaries:adsProvider:userInfo:onReadyForDownload:onParseComplete:</TokenIdentifier>
			<Abstract type="html">Creates a new in-memory DASH VirtuosoAsset object.</Abstract>
			<DeclaredIn>VirtuosoAsset+DASH.h</DeclaredIn>
			
			<Declaration>+ (nullable VirtuosoAsset *)assetWithAssetID:(nonnull NSString *)assetID description:(nonnull NSString *)description mpdUrl:(nonnull NSString *)mpdUrl protectionType:(kVDE_AssetProtectionType)protectionType maximumVideoBitrate:(long long)maximumVideoBitrate maximumAudioBitrate:(long long)maximumAudioBitrate publishDate:(nullable NSDate *)publishDate expiryDate:(nullable NSDate *)expiryDate expiryAfterDownload:(NSTimeInterval)expiryAfterDownload expiryAfterPlay:(NSTimeInterval)expiryAfterPlay assetDownloadLimit:(int)assetDownloadLimit enableFastPlay:(Boolean)enableFastPlay ancillaries:(nullable NSArray *)ancillaries adsProvider:(nullable VirtuosoAdsProvider *)adsProvider userInfo:(nullable NSDictionary *)userInfo onReadyForDownload:(nullable AssetReadyForDownloadBlock)readyBlock onParseComplete:(nullable AssetParsingCompletedBlock)completeBlock</Declaration>
			<Parameters>
				<Parameter>
					<Name>assetID</Name>
					<Abstract type="html">A globally unique identifier for the asset. Used in all log events. IMPORTANT: This value must be globally unique across all assets within the Catalog. Dupicate AssetID&apos;s are not allowed.</Abstract>
				</Parameter><Parameter>
					<Name>description</Name>
					<Abstract type="html">A description of the asset.  Virtuoso only uses this in log output.</Abstract>
				</Parameter><Parameter>
					<Name>mpdUrl</Name>
					<Abstract type="html">Where the media presentation description (mpd) file lives on the Internet.</Abstract>
				</Parameter><Parameter>
					<Name>protectionType</Name>
					<Abstract type="html">You should pass the default value of kVDE_AssetProtectionTypePassthrough unless
instructed differently by Penthera support.</Abstract>
				</Parameter><Parameter>
					<Name>maximumVideoBitrate</Name>
					<Abstract type="html">For mpd files containing multiple profiles, Virtuoso will select the highest bitrate
profile whose bitrate doesn&apos;t exceed this value. A value of 1 means &quot;use the lowest
bitrate.&quot; If there&apos;s no profile of lower bitrate than maximumBitrate, Virtuoso will
select the lowest bitrate profile. A value of INT_MAX means &quot;use the highest bitrate.&quot;</Abstract>
				</Parameter><Parameter>
					<Name>maximumAudioBitrate</Name>
					<Abstract type="html">Same as maximumVideoBitrate, but for the audio portion of the stream.  If the audio for
this asset is contained within the video profile, this value is ignored.</Abstract>
				</Parameter><Parameter>
					<Name>publishDate</Name>
					<Abstract type="html">Virtuoso will not provide API access to the asset until this date. Nil means &quot;now.&quot;</Abstract>
				</Parameter><Parameter>
					<Name>expiryDate</Name>
					<Abstract type="html">Virtuoso will not provide API access to the asset after this date. Nil means no expiry.</Abstract>
				</Parameter><Parameter>
					<Name>expiryAfterDownload</Name>
					<Abstract type="html">Amount of time after Virtuoso completes download of the asset that
Virtuoso will delete the asset. In seconds. &lt;=0 means no expiry.</Abstract>
				</Parameter><Parameter>
					<Name>expiryAfterPlay</Name>
					<Abstract type="html">Amount of time after the asset is first played that
Virtuoso will delete the asset. In seconds. &lt;=0 means no expiry.</Abstract>
				</Parameter><Parameter>
					<Name>assetDownloadLimit</Name>
					<Abstract type="html">Virtuoso applies this value instead of the backplane-defined global asset download limit
A value &lt; 0 means to use the backplane defined value.  A value of 0 means unlimited.  A
value &gt; 0 will be applied to download permissions checks for this asset.</Abstract>
				</Parameter><Parameter>
					<Name>enableFastPlay</Name>
					<Abstract type="html">If enabled, Virtuoso will automatically download the initial portion of the asset as soon
as the asset is created.  Whenever an asset is streamed, the cached beginning of the asset
will be returned to the player immediatley, eliminating startup buffer time for streamed playback.</Abstract>
				</Parameter><Parameter>
					<Name>ancillaries</Name>
					<Abstract type="html">Optional array of VirtuosoAncillaryFile to be downloaded</Abstract>
				</Parameter><Parameter>
					<Name>adsProvider</Name>
					<Abstract type="html">BETA Feature. Optional AdsProvider to use with this Asset.</Abstract>
				</Parameter><Parameter>
					<Name>userInfo</Name>
					<Abstract type="html">A convenience field allowing you to associate arbitrary data with an asset.
Virtuoso will serialize this data and store it, but not explicitly use this data.
The provided userInfo must be property-list compatible. May be nil.</Abstract>
				</Parameter><Parameter>
					<Name>readyBlock</Name>
					<Abstract type="html">Called when the asset is ready to be added to the download queue</Abstract>
				</Parameter><Parameter>
					<Name>completeBlock</Name>
					<Abstract type="html">Called when asset parsing completes. May be nil.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A new (empty) VirtuosoAsset object, or nil if an error occured.</Abstract></ReturnValue>
			<Anchor>//api/name/assetWithAssetID:description:mpdUrl:protectionType:maximumVideoBitrate:maximumAudioBitrate:publishDate:expiryDate:expiryAfterDownload:expiryAfterPlay:assetDownloadLimit:enableFastPlay:ancillaries:adsProvider:userInfo:onReadyForDownload:onParseComplete:</Anchor>
            <NodeRef refid="21"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VirtuosoAsset/setMpdURL:withMaximumVideoBitrate:andMaximumAudioBitrate:onParseComplete:</TokenIdentifier>
			<Abstract type="html">Adds a mpd URL to this VirtuosoAsset.  Call does nothing if the VirtuosoAsset is
not a DASH asset.</Abstract>
			<DeclaredIn>VirtuosoAsset+DASH.h</DeclaredIn>
			
			<Declaration>- (void)setMpdURL:(nonnull NSString *)mpdUrl withMaximumVideoBitrate:(long long)maximumVideoBitrate andMaximumAudioBitrate:(long long)maximumAudioBitrate onParseComplete:(nullable AssetParsingCompletedBlock)completeBlock</Declaration>
			<Parameters>
				<Parameter>
					<Name>mpdUrl</Name>
					<Abstract type="html">Where the media presentation description (mpd) lives on the Internet.</Abstract>
				</Parameter><Parameter>
					<Name>maximumVideoBitrate</Name>
					<Abstract type="html">For mpd files containing multiple profiles, Virtuoso will select the highest bitrate
profile whose bitrate doesn&apos;t exceed this value. A value of 1 means &quot;use the lowest
bitrate.&quot; If there&apos;s no profile of lower bitrate than maximumBitrate, Virtuoso will
select the lowest bitrate profile. A value of INT_MAX means &quot;use the highest bitrate.&quot;</Abstract>
				</Parameter><Parameter>
					<Name>maximumAudioBitrate</Name>
					<Abstract type="html">Same as maximumVideoBitrate, but for the audio portion of the stream.  If the audio for
this asset is contained within the video profile, this value is ignored.</Abstract>
				</Parameter><Parameter>
					<Name>completeBlock</Name>
					<Abstract type="html">Called when asset parsing completes. May be nil.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setMpdURL:withMaximumVideoBitrate:andMaximumAudioBitrate:onParseComplete:</Anchor>
            <NodeRef refid="21"/>
		</Token>
		
        
        
	</File>
</Tokens>